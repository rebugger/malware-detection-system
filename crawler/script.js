var request = require("request");
var client = require('cheerio-httpcli');
var urlType = require('url');
var fs = require('fs')
var async = require('async')
var path = require('path')
var jsonPath = path.join(__dirname, '../log/script_src/found.txt');

// var logPath = require('../log/')

module.exports = function(list) {
    var cList = []; 
    cList = list.Ulist
    var cLength = list.Ulist.length

    // asynce.waterfall([
    //     function(callback){
    //         async.eachLimit(cList, cLength, function(clist, next){
    //             totalUrl = WF_crawler(clist);
    //         })
    //     }
    // ])
    async.eachLimit(cList, cLength, function(clist, next){
        WF_crawler(clist);
    })
    function WF_crawler(url) {
        // var obj = {
        //     Flist : []
        // }
        client.fetch(url,function(err, $, res){
            var result = [];
            var src;
            if(err) throw err;
            else{
                $('script').each(function(idx, data){
                    var src = $(this).attr('src');

                    if(typeof(src) !== 'undefined' && src !== 'javascript:;' && src !== '#'){
                        var itUrl = src                        
                        // if(itUrl.indexOf('h',1)){
                        //     console.log('dmd? : ', itUrl)
                        // }
                        if(idx === 100){
                            return false;
                            console.log('href crawler 중지;')
                        }
                        if(idx === 1){
                            result.push(itUrl);
                        }
                        else{
                            if(result.indexOf(itUrl) > -1){
                            }
                            else{
                                result.push(itUrl)  
                            }
                            // console.log(result.length)
                        }
                    }
                })
                // WF_IN_log_existsJson(result);
                WF_IN_log_foundJson(result) //데이터 저장
            }
            console.log('script 끝')
        })
    }

    function WF_IN_log_existsJson(arrayLog){
        //출력된 배열에서
        var list = arrayLog;
        var uniqueNames = [];
        
        $.each(list, function(i,el){
            if($.inArray(el,uniqueNames) === -1) uniqueNames.push(el);
        })
        console.log('중복제거 텟트 : ',uniqueNames.length)
    }
    function WF_IN_log_foundJson(log){
        // obj.Flist.push(itUrl)
        // href_result = JSON.stringify(obj)
        fs.appendFileSync(jsonPath, log, 'utf8'),function(err){
            if(err) console.log('error  : ', err)
        }
    }


    function WF_pushReuslt(result){
        return totalUrl.push(result)
    }

    function WF_checkUrl(list) {
        return total = list.Ulist[list_count]
        list_count++
    }

}




// var dataPush = (data, checkNum) => {
//     var checker = checkNum;

//     console.log('Check : checker  : ', checker +' : '+typeof(checker))
//     if(checker !== 0){
//         fs.writeFileSync('./log/found.json', data , "utf8");
//     }
//     else{
//         fs.writeFileSync('./log/error.json', data , "utf8");
//     }
// }

// var dataCheck = (data) => {
//     var total = [];
//     var list = data;
//     if(list.indexOf('h') !== -1){
        
//     }
// }




    // var list_count = 0;
    // var total = 0;

    // var machine =[
    //     function(callback){
    //         var checkUrl = WF_checkUrl(list);
    //         callback(null, checkUrl)
    //     },
    //     function(data,callback){
    //         console.log('1',data)
    //         WF_crawler(data)
    //     }
    // ]

    // async.waterfall(machine, function(err){
    //     if(err){
    //         console.log('aynce error : ', err)
    //     }
    //     else{
    //         console.log('aynce done : ')
    //     }
    // })
